package ResqueStrikeRegister

import RegisterEvents
import EventHelper
import ResqueStrike
import ClosureTimers
import HashMap
import UndeadRs
import BasicRs
import HumanRs

let rsMap = new HashMap<int, ResqueStrike>()..put(UNDEAD_RS_ID, basicRs)
                                            ..put(RESQUE_STRIKE_ID, basicRs)
                                            ..put(HUMAN_RS_ID, basicRs)


function saveData(int pid, resqueStrikeData data)
    C8[pid] = data.damage.toInt()
    c8[pid] = data.killed
    u8[N8[pid]]--

function updatePlayerData(int pid)
    if(u8[N8[pid]] == 0)
        dj(1, N8[pid] + 1, "|cffFF00000|r")
    else
        dj(1, N8[pid] + 1, I2S(u8[N8[pid]]))
    ej(z7[pid], N8[pid] * 6 + 1, " ")

init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT) ->
        let u = GetTriggerUnit()
        let p = u.getOwner()
        let pid = p.getId()
        let pos = EventData.getSpellTargetPos()
        let sid = GetSpellAbilityId()
        if rsMap.has(sid)
            let rs = rsMap.get(sid)
            u..removeAbility(sid)
            doPeriodicallyCounted(0.35, 3) c ->
                rs.cast(pos, u)
            doAfter(1.5) ->
                saveData(pid, rs.getData())
                updatePlayerData(pid)
                rs.printMessage(p, rs.getData())
